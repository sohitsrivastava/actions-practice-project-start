name: Check Caches
on:
  push:
    branches:
      - master
env:
  DB_URL: 'mydb-url:5000'
  ARTIFACT_NAME: ${{ secrets.ARTIFCATNAME }}
jobs:
  setupjobscache:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: setup node js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: cached-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm install ci
  lint:
    needs: setupjobscache
    runs-on: ubuntu-latest
    environment: PRD
    steps:
      - name: check PRD environment
        run: |
          echo "DB URL: ${{ vars.DB_URL }}"
          echo "ARTIFACT NAME: ${{ secrets.ARTIFCATNAME }}"
      - name: Get Code
        uses: actions/checkout@v3
      - name: setup node js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: cached-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm install ci
      - name: run lint
        run: npm run lint
  test:
    needs: setupjobscache
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup node js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: cached-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm install ci
      - name: run tests
        id: run-test
        run: npm run test
      - name: upload test results
        if: failure() && steps.run-test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
      - name: check DEV environment
        run: |
          echo "DB URL: ${{ vars.DB_URL }}"
          echo "ARTIFACT NAME: ${{ secrets.ARTIFCATNAME }}"
  checkEnvRepo:
    runs-on: ubuntu-latest
    steps:
      - name: check GENERAL REPO Environment
        run: echo "${{ vars.DB_URL }}"
  checkEnv:
    runs-on: ubuntu-latest
    steps:
      - name: check GENERAL Environment
        run: echo "${{ env.DB_URL }}"
  checkSecrets:
    runs-on: ubuntu-latest
    steps:
      - name: check General Secret
        run: |
          echo "ARTIFACT NAME: ${{ secrets.ARTIFCATNAME }}"
          echo "ARTIFACT NAME: ${{ env.ARTIFACT_NAME }}"
  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Get Artifact
        uses: actions/download-artifact@v4
        with:
          name: test-report
      - name: deploy
        run: echo "Deploying"
